* 비주얼스튜디오 
1. 비주얼스튜디오 == IDE(통합개발환경)
2. IDE란 디버깅이나 빌드 및 배포를 종합적으로 관리해주는 프로그램.
3. 버튼하나만 눌러도 내 프로그램을 만들 수 있게 도와준다.
4. 비주얼 스튜디오를 얼마나 아느냐도 프로그래머 실력의 일부.

* Git
1. GIt == 형상관리프로그램
2. 당연히 여러종류의 형상관리 프로그램들이 존재한다.

* 커밋
내가 만든 프로젝트에서 새로운걸 만들거나 변경사항을 형상관리 프로그램에 알려주는걸 커밋이라고 한다.
git은 1가지 단계가 더 있는데 커밋은 보통 로컬(내컴퓨터에서만)이루어지고 그걸 push해야 실제 레포지트리에 적용된다.
레포지트리(서버에 저장된 최종 버전 폴더)


* 서버
1. 네트워크로 연결된 어떠한 컴퓨터
2. 내컴퓨터가 내 컴퓨터의 서버가 되어줄수 있다.

* 비주얼스튜디오 프로젝트
1. 프로젝트란 1개의 프로그램(.exe)을 만들 수 있는 관리 단위

* 비주얼스튜디오 솔루션
1. 현대 프로그램 프로젝트는 보통 1개의 프로그램으로 프로젝트를 진행하지 않는다.
2. 롤로 친다면 lol.exe 프로젝트
   lolCharacterCreate.exe 프로젝트
   lolItemCreate.exe 프로젝트
3. 이런 분리된 프로젝트들을
    lol 솔루션
      lol 프로젝트
      lolItemCreate 프로젝트
      lolCharacterCreate 프로젝트
4. 선생님
    CPlusPlus 솔루션
      00. 시작 프로젝트
      01. 변수 프로젝트
      02. 함수 프로젝트

5. const
  특정 자료형의 메모리영역을 바꿀수 없게 된다.
  규칙은 하나 const 자료형 const로 앞이나 뒤에 const를 붙여서 메모리 영역을 변경하지 못하게 만든다.

  int를 사용해서 지역변수를 선언하건 리턴하건 뭘하건
  const int 는 int를 바꿀수 없다. 라는 뜻
  int* const 를 뒤에 붙이는 이유는 포인터의 주소값을 변경못하도록 상수화시키기 위함이다.

6. C++ 메모리영역 총정리
공짜는 없으므로 모든건 메모리영역에 들어가 있어야 한다.

6-1. 코드영역
 상수와 함수의 정의와 구현등등이 들어가는 영역
 exe파일이 코드영역에 복사되는 개념에 가깝다.

6-2. 데이터영역
 전역변수
 
6-3. 힙
 

6-4. 스택
 지역변수
 함수가 실행할때 필요한 메모리영역들이 여기에

7. 라이브러리
  라이브러리는 실행되는 exe파일을 만들어내지는 않지만 완전히 빌드되었을대의 
  실행된다는 내용을 빼고 코드만 오로지 빌드했을때 나오는 파일을 의미합니다.
  이때 2가지 구분이 있는데 정적 라이브러리와 동적 라이브러리 입니다.
  
  7-1. 정적 라이브러리는
  빌드된 코드의 내용을 현재 내가 만들고 있는 exe파일에 모두 추가해서 exe파일을 빌드하는
  라이브러리 입니다.

8. std
  스탠다드 라이브러리를 의미합니다.
  c++ 기본 코드들을 의미합니다. 기본적으로 우리에게 제공되는 함수 클래스 c++만든 사람들이 쌓아오고
  c++ 위원에서 인증한 코드와 함수 객체들을 std 스탠다드 라이브러리 인터페이스 혹은 코드라고 합니다.

9. stl
  std의 하위분류로 스탠다드 템플릿 라이브러리라고 불립니다.
  템플릿을 사용해서 만들어진 클래스 함수 객체... 등등등등등... 을

10. 자료구조
  이론적으로 자료구조란 말그대로 자료(데이터 혹은 자원)을 얼마나 효율적으로 배치하고
  배치한걸 얼마나 빠르게 찾고 빠르게 쓰고싶을때 쓰느냐?
  c++ 자료를 저장하고 보관하는 클래스와 함수들의 인터페이스를 말합니다.
  자료구조는 대부분 c++에서는 클래스로 표현되게 됩니다.

  자료(int)구조 클래스를 파악하려면
  1. 자료를 어떻게 넣는다.
  2. 자료를 어떻게 탐색하는가?
  3. 자료를 어떻게 지우는가?

11. 자료구조의 구분.
  자료구조는 컨테이너라고 불리기도 합니다.
  컨테이너에는 2가지의 분류가 있습니다.

  11-1. 메모리의 종류
      11-1-1. 배열형
      11-1-2. 노드형
         11-1-2-1. 양방향노드
         11-1-2-1. 트리형
            11-1-2-1-1. 옥트리
            11-1-2-1-2. 2진트리
            11-1-2-1-3. 쿼드트리

  11-2. 자료배치의 종류
      11-2-1. 시퀀스
         89507 => 배치가 그대로 89507
      11-2-2. 연관
         89507 => 돌려봤더니 05789
         89507 => 돌려봤더니 98507
         => 오해하면 안되는게 정렬이 아니라 바뀔 가능성이라는것이 존재하면 연관컨테이너이다.

      11-2-3. 어뎁터 <= 나중에 알려드리겠습니다.



  